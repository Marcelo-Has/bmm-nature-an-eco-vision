package view;

import java.awt.Dimension;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.event.InternalFrameEvent;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import modal.bean.Desmatamento;
import modal.dao.BDBMM;
import modal.dao.DesmatamentoDao;
import modal.dao.UsuarioDao;

public final class TelaCadDesmatamento extends javax.swing.JInternalFrame {

    public static TelaCadDesmatamento instancia = null;
    private final String usuario;
    private final ImageIcon icone = new ImageIcon("images//logo-bmm.png");

    public TelaCadDesmatamento(String usuario) {
        initComponents();
        instancia = this;
        this.usuario = usuario;
        addItens();
        DefaultTableModel modelo = (DefaultTableModel) tbDesmatamento.getModel();
        tbDesmatamento.setRowSorter(new TableRowSorter(modelo));
        leTabelaDesmatamento();
        validaNumero(txtAreaDesmatada);

        trataFechamento();
    }

    private void trataFechamento() {
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            @Override
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }

            @Override
            public void internalFrameOpened(InternalFrameEvent e) {
            }

            @Override
            public void internalFrameClosing(InternalFrameEvent e) {
                instancia = null;
            }

            @Override
            public void internalFrameIconified(InternalFrameEvent e) {
            }

            @Override
            public void internalFrameDeiconified(InternalFrameEvent e) {
            }

            @Override
            public void internalFrameActivated(InternalFrameEvent e) {
            }

            @Override
            public void internalFrameDeactivated(InternalFrameEvent e) {
            }
        });
    }

    private void validaNumero(JTextField caixa) {
        caixa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                caixa.setText(caixa.getText().replaceAll("[^0-9]", ""));
            }
        });
    }

    private void addItens() {
        BDBMM bd = new BDBMM();
        bd.addItem("SELECT sigla_estado, nome_estado FROM estado", "nome_estado", "sigla_estado", cboEstado);
        bd.addItem("SELECT DISTINCT nome_bioma FROM bioma", "nome_bioma", cboBioma);
        bd.addItem("SELECT ano FROM ano", "ano", cboAno);
    }

    public void centralizaTela() {
        Dimension d = this.getDesktopPane().getSize();
        this.setLocation((d.width - this.getSize().width) / 2, (d.height - this.getSize().height) / 2);
    }

    public void leTabelaDesmatamento() {
        DefaultTableModel modelo = (DefaultTableModel) tbDesmatamento.getModel();
        modelo.setNumRows(0);

        DesmatamentoDao dDao = new DesmatamentoDao();

        for (Desmatamento des : dDao.read()) {

            modelo.addRow(new Object[]{
                des.getId(),
                des.getBioma(),
                des.getAno(),
                des.getEstado(),
                des.getAreaDesmatada(),
                des.getUltimaModificacao(),
                des.getUsuario()
            });

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pInfOcorrido = new javax.swing.JPanel();
        lbBioma = new javax.swing.JLabel();
        lbEstado = new javax.swing.JLabel();
        lbAno = new javax.swing.JLabel();
        lbAreaDesmatada = new javax.swing.JLabel();
        txtAreaDesmatada = new javax.swing.JTextField();
        cboBioma = new javax.swing.JComboBox<>();
        cboAno = new javax.swing.JComboBox<>();
        cboEstado = new javax.swing.JComboBox<>();
        pListaDesmatamento = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbDesmatamento = new javax.swing.JTable();
        btnCadDes = new javax.swing.JButton();
        btnUpDes = new javax.swing.JButton();
        btnDelDes = new javax.swing.JButton();

        setBackground(new java.awt.Color(249, 234, 229));
        setClosable(true);
        setTitle("Cadastrar Desmatamento");
        setMinimumSize(new java.awt.Dimension(1000, 538));
        setPreferredSize(new java.awt.Dimension(1000, 538));

        pInfOcorrido.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informações do Ocorrido", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 12))); // NOI18N

        lbBioma.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbBioma.setText("Bioma:");

        lbEstado.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbEstado.setText("Estado:");

        lbAno.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbAno.setText("Ano:");

        lbAreaDesmatada.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        lbAreaDesmatada.setText("Área Desmatada (km²):");

        javax.swing.GroupLayout pInfOcorridoLayout = new javax.swing.GroupLayout(pInfOcorrido);
        pInfOcorrido.setLayout(pInfOcorridoLayout);
        pInfOcorridoLayout.setHorizontalGroup(
            pInfOcorridoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pInfOcorridoLayout.createSequentialGroup()
                .addGap(91, 91, 91)
                .addGroup(pInfOcorridoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbEstado)
                    .addComponent(lbBioma))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pInfOcorridoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pInfOcorridoLayout.createSequentialGroup()
                        .addComponent(cboBioma, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                        .addGroup(pInfOcorridoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pInfOcorridoLayout.createSequentialGroup()
                                .addComponent(lbAreaDesmatada)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtAreaDesmatada, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pInfOcorridoLayout.createSequentialGroup()
                                .addComponent(lbAno)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cboAno, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(75, 75, 75))
                    .addGroup(pInfOcorridoLayout.createSequentialGroup()
                        .addComponent(cboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pInfOcorridoLayout.setVerticalGroup(
            pInfOcorridoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pInfOcorridoLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(pInfOcorridoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pInfOcorridoLayout.createSequentialGroup()
                        .addGroup(pInfOcorridoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbAno)
                            .addComponent(cboAno, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pInfOcorridoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbAreaDesmatada)
                            .addComponent(txtAreaDesmatada, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pInfOcorridoLayout.createSequentialGroup()
                        .addGroup(pInfOcorridoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbBioma)
                            .addComponent(cboBioma, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, Short.MAX_VALUE)
                        .addGroup(pInfOcorridoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbEstado))
                        .addGap(99, 99, 99))))
        );

        pListaDesmatamento.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Informações do Ocorrido", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 3, 12))); // NOI18N

        tbDesmatamento.setFont(new java.awt.Font("Segoe UI", 0, 12)); // NOI18N
        tbDesmatamento.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Bioma", "Ano", "Estado", "Área Desmatada (km²)", "Última Modificação", "Usuário"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Float.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbDesmatamento.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tbDesmatamento.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbDesmatamento.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tbDesmatamento);
        if (tbDesmatamento.getColumnModel().getColumnCount() > 0) {
            tbDesmatamento.getColumnModel().getColumn(0).setPreferredWidth(5);
            tbDesmatamento.getColumnModel().getColumn(1).setPreferredWidth(25);
            tbDesmatamento.getColumnModel().getColumn(2).setPreferredWidth(10);
            tbDesmatamento.getColumnModel().getColumn(3).setPreferredWidth(10);
            tbDesmatamento.getColumnModel().getColumn(5).setPreferredWidth(35);
            tbDesmatamento.getColumnModel().getColumn(6).setPreferredWidth(20);
        }

        javax.swing.GroupLayout pListaDesmatamentoLayout = new javax.swing.GroupLayout(pListaDesmatamento);
        pListaDesmatamento.setLayout(pListaDesmatamentoLayout);
        pListaDesmatamentoLayout.setHorizontalGroup(
            pListaDesmatamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pListaDesmatamentoLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 889, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pListaDesmatamentoLayout.setVerticalGroup(
            pListaDesmatamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pListaDesmatamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnCadDes.setText("Cadastrar");
        btnCadDes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCadDes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastraDesmatamento(evt);
            }
        });

        btnUpDes.setText("Atualizar");
        btnUpDes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpDes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chamaTelaUpDesmatamento(evt);
            }
        });

        btnDelDes.setText("Excluir");
        btnDelDes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelDes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluiDesmatamento(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCadDes, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(btnUpDes, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(btnDelDes, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(pListaDesmatamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pInfOcorrido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pInfOcorrido, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pListaDesmatamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnDelDes, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpDes, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCadDes, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        pInfOcorrido.getAccessibleContext().setAccessibleName("");
        pInfOcorrido.getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cadastraDesmatamento(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastraDesmatamento

        if (JOptionPane.showConfirmDialog(null, "Deseja mesmo cadastrar estes dados?", "Cadastro", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, icone) == JOptionPane.YES_OPTION) {

            if (txtAreaDesmatada.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Preencha o campo de área desmatada para cadastrar um novo desmatamento!", "Atenção", JOptionPane.INFORMATION_MESSAGE, icone);
            } else {
                String siglaEstado;
                siglaEstado = cboEstado.getSelectedItem().toString();

                Desmatamento des = new Desmatamento();
                DesmatamentoDao desDao = new DesmatamentoDao();
                UsuarioDao uDao = new UsuarioDao();

                if (desDao.verificaEstadoBioma(cboBioma.getSelectedItem().toString(), siglaEstado.substring(siglaEstado.length() - 2))) {

                    des.setBioma(cboBioma.getSelectedItem().toString());
                    des.setAno(Integer.parseInt(cboAno.getSelectedItem().toString()));
                    des.setEstado(siglaEstado.substring(siglaEstado.length() - 2));
                    des.setAreaDesmatada(Integer.parseInt(txtAreaDesmatada.getText()));
                    des.setUsuario(uDao.verificaUsuario(usuario));
                    desDao.create(des);

                    txtAreaDesmatada.setText("");
                    cboBioma.setSelectedIndex(0);
                    cboAno.setSelectedIndex(0);
                    cboEstado.setSelectedIndex(0);

                    leTabelaDesmatamento();
                } else {
                    JOptionPane.showMessageDialog(null, "Este estado não tem o bioma especificado!", "Atenção", JOptionPane.INFORMATION_MESSAGE, icone);
                }
            }
        }
    }//GEN-LAST:event_cadastraDesmatamento

    private void chamaTelaUpDesmatamento(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chamaTelaUpDesmatamento
        if (TelaUpDesmatamento.instancia == null) {
            if (tbDesmatamento.getSelectedRow() != -1) {

                TelaUpDesmatamento upDesmatamento = new TelaUpDesmatamento(usuario);

                getParent().add(upDesmatamento);
                upDesmatamento.setVisible(true);
                upDesmatamento.toFront();
                upDesmatamento.centralizaTela();

                upDesmatamento.setValoresDesmatamento(
                        tbDesmatamento.getValueAt(tbDesmatamento.getSelectedRow(), 0).toString(),
                        tbDesmatamento.getValueAt(tbDesmatamento.getSelectedRow(), 1).toString(),
                        tbDesmatamento.getValueAt(tbDesmatamento.getSelectedRow(), 2).toString(),
                        tbDesmatamento.getValueAt(tbDesmatamento.getSelectedRow(), 3).toString(),
                        tbDesmatamento.getValueAt(tbDesmatamento.getSelectedRow(), 4).toString()
                );
                

            } else {
                JOptionPane.showMessageDialog(null, "Selecione um desmatamento cadastrado!", "Atenção", JOptionPane.INFORMATION_MESSAGE, icone);
            }
        } else {
            TelaUpDesmatamento.instancia.toFront();
        }
    }//GEN-LAST:event_chamaTelaUpDesmatamento

    private void excluiDesmatamento(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluiDesmatamento
        if (tbDesmatamento.getSelectedRow() != -1) {
            if (JOptionPane.showConfirmDialog(null, "Deseja mesmo excluir estes dados?", "Exclusão", JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE, icone) == JOptionPane.YES_OPTION) {

                Desmatamento des = new Desmatamento();
                DesmatamentoDao desDao = new DesmatamentoDao();

                des.setId((int) tbDesmatamento.getValueAt(tbDesmatamento.getSelectedRow(), 0));
                desDao.delete(des);

                leTabelaDesmatamento();
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione um desmatamento cadastrado!", "Atenção", JOptionPane.INFORMATION_MESSAGE, icone);
        }
    }//GEN-LAST:event_excluiDesmatamento


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadDes;
    private javax.swing.JButton btnDelDes;
    private javax.swing.JButton btnUpDes;
    private javax.swing.JComboBox<String> cboAno;
    private javax.swing.JComboBox<String> cboBioma;
    private javax.swing.JComboBox<String> cboEstado;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbAno;
    private javax.swing.JLabel lbAreaDesmatada;
    private javax.swing.JLabel lbBioma;
    private javax.swing.JLabel lbEstado;
    private javax.swing.JPanel pInfOcorrido;
    private javax.swing.JPanel pListaDesmatamento;
    private javax.swing.JTable tbDesmatamento;
    private javax.swing.JTextField txtAreaDesmatada;
    // End of variables declaration//GEN-END:variables
}
